[gd_resource type="VisualShader" load_steps=5 format=3 uid="uid://q5jfeakclkb2"]

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_ckywq"]
texture_type = 1

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_23210"]
expanded_output_ports = [0]
input_name = "uv"

[sub_resource type="VisualShaderNodeCompare" id="VisualShaderNodeCompare_1hpn6"]
output_port_for_preview = 0
default_input_values = [0, 0.0, 1, 0.75, 2, 1e-05]
function = 2

[sub_resource type="VisualShaderNodeSwitch" id="VisualShaderNodeSwitch_3f4f1"]
default_input_values = [0, false, 1, Vector3(1, 1, 1), 2, Vector3(0, 0, 0)]
op_type = 4

[resource]
code = "shader_type spatial;
uniform sampler2D tex_frg_2 : source_color;



void fragment() {
// Texture2D:2
	vec4 n_out2p0 = texture(tex_frg_2, UV);


// Input:3
	vec2 n_out3p0 = UV;
	float n_out3p1 = n_out3p0.r;
	float n_out3p2 = n_out3p0.g;


// Compare:4
	float n_in4p1 = 0.75000;
	bool n_out4p0 = n_out3p2 > n_in4p1;


	vec3 n_out5p0;
// Switch:5
	vec3 n_in5p2 = vec3(0.00000, 0.00000, 0.00000);
	n_out5p0 = mix(n_in5p2, vec3(n_out2p0.xyz), float(n_out4p0));


// Output:0
	ALBEDO = vec3(n_out2p0.xyz);
	EMISSION = n_out5p0;


}
"
graph_offset = Vector2(-182, 164)
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture_ckywq")
nodes/fragment/2/position = Vector2(-400, 60)
nodes/fragment/3/node = SubResource("VisualShaderNodeInput_23210")
nodes/fragment/3/position = Vector2(-640, 360)
nodes/fragment/4/node = SubResource("VisualShaderNodeCompare_1hpn6")
nodes/fragment/4/position = Vector2(-260, 320)
nodes/fragment/5/node = SubResource("VisualShaderNodeSwitch_3f4f1")
nodes/fragment/5/position = Vector2(80, 300)
nodes/fragment/connections = PackedInt32Array(2, 0, 0, 0, 3, 2, 4, 0, 4, 0, 5, 0, 2, 0, 5, 1, 5, 0, 0, 5)
