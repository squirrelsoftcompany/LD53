[gd_resource type="VisualShader" load_steps=3 format=3 uid="uid://bwhw4m83hxlp4"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_wc3pw"]
expanded_output_ports = [0]
input_name = "color"

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_6dlxh"]
default_input_values = [0, 0.0, 1, 2.0]
operator = 5

[resource]
code = "shader_type spatial;



void fragment() {
// Input:2
	vec4 n_out2p0 = COLOR;
	float n_out2p4 = n_out2p0.a;


// FloatOp:3
	float n_in3p1 = 2.00000;
	float n_out3p0 = pow(n_out2p4, n_in3p1);


// Output:0
	ALBEDO = vec3(n_out2p0.xyz);
	ALPHA = n_out2p4;
	EMISSION = vec3(n_out3p0);


}
"
graph_offset = Vector2(-7.76337, 146.266)
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_wc3pw")
nodes/fragment/2/position = Vector2(-120, 140)
nodes/fragment/3/node = SubResource("VisualShaderNodeFloatOp_6dlxh")
nodes/fragment/3/position = Vector2(200, 340)
nodes/fragment/connections = PackedInt32Array(2, 0, 0, 0, 2, 4, 0, 1, 2, 4, 3, 0, 3, 0, 0, 5)
