[gd_resource type="VisualShader" load_steps=18 format=3 uid="uid://bqxpm3mu8g1lv"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_052rx"]
expanded_output_ports = [0]
input_name = "custom"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_m2v0w"]
input_name = "lifetime"

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_jat8d"]
operator = 3

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_4v02m"]
input_name = "delta"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_r1a4e"]
expanded_output_ports = [0]
input_name = "custom"

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_bp0ro"]
operator = 1

[sub_resource type="VisualShaderNodeParticleRandomness" id="VisualShaderNodeParticleRandomness_t2g8j"]
default_input_values = [1, Vector3(-0.1, -0.1, -0.1), 2, Vector3(0.1, 0.01, 0.1)]
op_type = 2

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_ts18a"]
parameter_name = "Force"

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_bqi46"]

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_ikhfx"]
parameter_name = "Color"

[sub_resource type="VisualShaderNodeBooleanParameter" id="VisualShaderNodeBooleanParameter_tm68s"]
parameter_name = "Large"

[sub_resource type="VisualShaderNodeSwitch" id="VisualShaderNodeSwitch_jxsea"]
default_input_values = [0, false, 1, Vector3(-0.3, -0.5, -0.1), 2, Vector3(-0.1, -0.1, -0.1)]
op_type = 4

[sub_resource type="VisualShaderNodeSwitch" id="VisualShaderNodeSwitch_pm5dc"]
default_input_values = [0, false, 1, Vector3(0.3, 0.5, 0.1), 2, Vector3(0.1, 0.1, 0.1)]
op_type = 4

[sub_resource type="VisualShaderNodeParticleRandomness" id="VisualShaderNodeParticleRandomness_yvx0x"]
default_input_values = [1, -1.5, 2, 1.5]

[sub_resource type="VisualShaderNodeSwitch" id="VisualShaderNodeSwitch_67y46"]

[sub_resource type="VisualShaderNodeVec3Constant" id="VisualShaderNodeVec3Constant_e1orx"]
constant = Vector3(0, 1, 0)

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_dq3dj"]
input_name = "lifetime"

[resource]
code = "shader_type particles;
uniform float Force;
uniform vec4 Color : source_color;
uniform bool Large;


float __rand_from_seed(inout uint seed) {
	int k;
	int s = int(seed);
	if (s == 0)
	s = 305420679;
	k = s / 127773;
	s = 16807 * (s - k * 127773) - 2836 * k;
	if (s < 0)
		s += 2147483647;
	seed = uint(s);
	return float(seed % uint(65536)) / 65535.0;
}

float __rand_from_seed_m1_p1(inout uint seed) {
	return __rand_from_seed(seed) * 2.0 - 1.0;
}

float __randf_range(inout uint seed, float from, float to) {
	return __rand_from_seed(seed) * (to - from) + from;
}

uint __hash(uint x) {
	x = ((x >> uint(16)) ^ x) * uint(73244475);
	x = ((x >> uint(16)) ^ x) * uint(73244475);
	x = (x >> uint(16)) ^ x;
	return x;
}

mat3 __build_rotation_mat3(vec3 axis, float angle) {
	axis = normalize(axis);
	float s = sin(angle);
	float c = cos(angle);
	float oc = 1.0 - c;
	return mat3(vec3(oc * axis.x * axis.x + c, oc * axis.x * axis.y - axis.z * s, oc * axis.z * axis.x + axis.y * s), vec3(oc * axis.x * axis.y + axis.z * s, oc * axis.y * axis.y + c, oc * axis.y * axis.z - axis.x * s), vec3(oc * axis.z * axis.x - axis.y * s, oc * axis.y * axis.z + axis.x * s, oc * axis.z * axis.z + c));
}

mat4 __build_rotation_mat4(vec3 axis, float angle) {
	axis = normalize(axis);
	float s = sin(angle);
	float c = cos(angle);
	float oc = 1.0 - c;
	return mat4(vec4(oc * axis.x * axis.x + c, oc * axis.x * axis.y - axis.z * s, oc * axis.z * axis.x + axis.y * s, 0), vec4(oc * axis.x * axis.y + axis.z * s, oc * axis.y * axis.y + c, oc * axis.y * axis.z - axis.x * s, 0), vec4(oc * axis.z * axis.x - axis.y * s, oc * axis.y * axis.z + axis.x * s, oc * axis.z * axis.z + c, 0), vec4(0, 0, 0, 1));
}

vec2 __get_random_unit_vec2(inout uint seed) {
	return normalize(vec2(__rand_from_seed_m1_p1(seed), __rand_from_seed_m1_p1(seed)));
}

vec3 __get_random_unit_vec3(inout uint seed) {
	return normalize(vec3(__rand_from_seed_m1_p1(seed), __rand_from_seed_m1_p1(seed), __rand_from_seed_m1_p1(seed)));
}

vec2 __randv2_range(inout uint seed, vec2 from, vec2 to) {
	return vec2(__randf_range(seed, from.x, to.x), __randf_range(seed, from.y, to.y));
}

vec3 __randv3_range(inout uint seed, vec3 from, vec3 to) {
	return vec3(__randf_range(seed, from.x, to.x), __randf_range(seed, from.y, to.y), __randf_range(seed, from.z, to.z));
}

vec4 __randv4_range(inout uint seed, vec4 from, vec4 to) {
	return vec4(__randf_range(seed, from.x, to.x), __randf_range(seed, from.y, to.y), __randf_range(seed, from.z, to.z), __randf_range(seed, from.w, to.w));
}

void start() {
	uint __seed = __hash(NUMBER + uint(1) + RANDOM_SEED);

	{
// FloatParameter:26
		float n_out26p0 = Force;


// VectorCompose:27
		float n_in27p0 = 0.00000;
		float n_in27p1 = 0.00000;
		vec3 n_out27p0 = vec3(n_in27p0, n_in27p1, n_out26p0);


// ColorParameter:29
		vec4 n_out29p0 = Color;


// BooleanParameter:30
		bool n_out30p0 = Large;


		vec3 n_out31p0;
// Switch:31
		vec3 n_in31p1 = vec3(-0.30000, -0.50000, -0.10000);
		vec3 n_in31p2 = vec3(-0.10000, -0.10000, -0.10000);
		n_out31p0 = mix(n_in31p2, n_in31p1, float(n_out30p0));


		vec3 n_out32p0;
// Switch:32
		vec3 n_in32p1 = vec3(0.30000, 0.50000, 0.10000);
		vec3 n_in32p2 = vec3(0.10000, 0.10000, 0.10000);
		n_out32p0 = mix(n_in32p2, n_in32p1, float(n_out30p0));


// ParticleRandomness:17
		vec3 n_out17p0 = __randv3_range(__seed, n_out31p0, n_out32p0);


// Vector3Constant:35
		vec3 n_out35p0 = vec3(0.000000, 1.000000, 0.000000);


// ParticleRandomness:33
		float n_in33p1 = -1.50000;
		float n_in33p2 = 1.50000;
		float n_out33p0 = __randf_range(__seed, n_in33p1, n_in33p2);


		float n_out34p0;
// Switch:34
		float n_in34p2 = 0.00000;
		n_out34p0 = mix(n_in34p2, n_out33p0, float(n_out30p0));


// StartOutput:0
		VELOCITY = n_out27p0;
		COLOR.rgb = vec3(n_out29p0.xyz);
		if (RESTART_POSITION) {
			TRANSFORM = mat4(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(n_out17p0, 1.0));
			if (RESTART_VELOCITY) {
				VELOCITY = (EMISSION_TRANSFORM * vec4(VELOCITY, 0.0)).xyz;
			}
			TRANSFORM = EMISSION_TRANSFORM * TRANSFORM;
		}
		TRANSFORM *= __build_rotation_mat4(n_out35p0, n_out34p0);


	}
	
	{
// Input:2
		float n_out2p0 = LIFETIME;


// CustomStartOutput:0
		CUSTOM.a = n_out2p0;


	}
}

void process() {
	uint __seed = __hash(NUMBER + uint(1) + RANDOM_SEED);

	{
// Input:2
		vec4 n_out2p0 = CUSTOM;
		float n_out2p4 = n_out2p0.a;


// Input:3
		float n_out3p0 = LIFETIME;


// FloatOp:4
		float n_out4p0 = n_out2p4 / n_out3p0;


// ProcessOutput:0
		COLOR.a = n_out4p0;


	}
	
	{
// Input:3
		vec4 n_out3p0 = CUSTOM;
		float n_out3p4 = n_out3p0.a;


// Input:2
		float n_out2p0 = DELTA;


// FloatOp:4
		float n_out4p0 = n_out3p4 - n_out2p0;


// CustomProcessOutput:0
		CUSTOM.a = n_out4p0;


	}
}

"
graph_offset = Vector2(-382.643, 207.133)
mode = 2
flags/collision_use_scale = false
flags/disable_force = false
flags/disable_velocity = false
flags/keep_data = false
nodes/start/0/position = Vector2(800, 200)
nodes/start/17/node = SubResource("VisualShaderNodeParticleRandomness_t2g8j")
nodes/start/17/position = Vector2(200, 580)
nodes/start/26/node = SubResource("VisualShaderNodeFloatParameter_ts18a")
nodes/start/26/position = Vector2(200, 100)
nodes/start/27/node = SubResource("VisualShaderNodeVectorCompose_bqi46")
nodes/start/27/position = Vector2(520, 100)
nodes/start/29/node = SubResource("VisualShaderNodeColorParameter_ikhfx")
nodes/start/29/position = Vector2(200, 280)
nodes/start/30/node = SubResource("VisualShaderNodeBooleanParameter_tm68s")
nodes/start/30/position = Vector2(-400, 640)
nodes/start/31/node = SubResource("VisualShaderNodeSwitch_jxsea")
nodes/start/31/position = Vector2(-80, 520)
nodes/start/32/node = SubResource("VisualShaderNodeSwitch_pm5dc")
nodes/start/32/position = Vector2(-80, 700)
nodes/start/33/node = SubResource("VisualShaderNodeParticleRandomness_yvx0x")
nodes/start/33/position = Vector2(-80, 880)
nodes/start/34/node = SubResource("VisualShaderNodeSwitch_67y46")
nodes/start/34/position = Vector2(200, 760)
nodes/start/35/node = SubResource("VisualShaderNodeVec3Constant_e1orx")
nodes/start/35/position = Vector2(200, 460)
nodes/start/connections = PackedInt32Array(17, 0, 0, 4, 27, 0, 0, 1, 26, 0, 27, 2, 29, 0, 0, 2, 30, 0, 31, 0, 30, 0, 32, 0, 32, 0, 17, 2, 31, 0, 17, 1, 30, 0, 34, 0, 33, 0, 34, 1, 35, 0, 0, 6, 34, 0, 0, 7)
nodes/process/2/node = SubResource("VisualShaderNodeInput_052rx")
nodes/process/2/position = Vector2(-220, 120)
nodes/process/3/node = SubResource("VisualShaderNodeInput_m2v0w")
nodes/process/3/position = Vector2(-200, 320)
nodes/process/4/node = SubResource("VisualShaderNodeFloatOp_jat8d")
nodes/process/4/position = Vector2(100, 160)
nodes/process/connections = PackedInt32Array(2, 4, 4, 0, 3, 0, 4, 1, 4, 0, 0, 3)
nodes/start_custom/2/node = SubResource("VisualShaderNodeInput_dq3dj")
nodes/start_custom/2/position = Vector2(-160, 240)
nodes/start_custom/connections = PackedInt32Array(2, 0, 0, 1)
nodes/process_custom/2/node = SubResource("VisualShaderNodeInput_4v02m")
nodes/process_custom/2/position = Vector2(-160, 340)
nodes/process_custom/3/node = SubResource("VisualShaderNodeInput_r1a4e")
nodes/process_custom/3/position = Vector2(-200, 140)
nodes/process_custom/4/node = SubResource("VisualShaderNodeFloatOp_bp0ro")
nodes/process_custom/4/position = Vector2(160, 160)
nodes/process_custom/connections = PackedInt32Array(3, 4, 4, 0, 2, 0, 4, 1, 4, 0, 0, 1)
