[gd_resource type="VisualShader" load_steps=6 format=3 uid="uid://dm1hiccu16s5h"]

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_0pdr1"]

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_om3qs"]
parameter_name = "Secundary_Color"

[sub_resource type="VisualShaderNodeMultiplyAdd" id="VisualShaderNodeMultiplyAdd_8n4et"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0, 0, 0)]
op_type = 2

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_14xtx"]
parameter_name = "Main_Color"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_575fh"]
operator = 3

[resource]
code = "shader_type spatial;
uniform vec4 Secundary_Color : source_color;
uniform sampler2D tex_frg_2;
uniform vec4 Main_Color : source_color;



void fragment() {
// ColorParameter:3
	vec4 n_out3p0 = Secundary_Color;


// Texture2D:2
	vec4 n_out2p0 = texture(tex_frg_2, UV);


// ColorParameter:5
	vec4 n_out5p0 = Main_Color;


// VectorOp:6
	vec3 n_out6p0 = vec3(n_out5p0.xyz) / vec3(n_out2p0.xyz);


// MultiplyAdd:4
	vec3 n_out4p0 = (vec3(n_out3p0.xyz) * vec3(n_out2p0.xyz)) + n_out6p0;


// Output:0
	ALBEDO = n_out4p0;


}
"
graph_offset = Vector2(-409.139, -62.8333)
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture_0pdr1")
nodes/fragment/2/position = Vector2(-400, -20)
nodes/fragment/3/node = SubResource("VisualShaderNodeColorParameter_om3qs")
nodes/fragment/3/position = Vector2(-340, -180)
nodes/fragment/4/node = SubResource("VisualShaderNodeMultiplyAdd_8n4et")
nodes/fragment/4/position = Vector2(80, 20)
nodes/fragment/5/node = SubResource("VisualShaderNodeColorParameter_14xtx")
nodes/fragment/5/position = Vector2(-440, 240)
nodes/fragment/6/node = SubResource("VisualShaderNodeVectorOp_575fh")
nodes/fragment/6/position = Vector2(-80, 140)
nodes/fragment/connections = PackedInt32Array(3, 0, 4, 0, 2, 0, 4, 1, 4, 0, 0, 0, 5, 0, 6, 0, 2, 0, 6, 1, 6, 0, 4, 2)
